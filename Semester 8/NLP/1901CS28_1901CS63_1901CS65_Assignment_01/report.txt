# CS563 Natural Language Processing: Assignment 1
Parts of Speech Tagging using second order Hidden Markov Model.

## Team Details
## Tanishq Malu 1901CS63
## Tarusi Mittal 1901cs65
## Jenish Monpara 1901CS28

## Second Order Hidden Markov Model (HMM)
### Creating a virtual environment 
python -m venv env

### activating the virtual environment
env\Scripts\activate

### Running the Code
```
python3 main.py
```

### Error Analysis from Output
---
#### HMM for 36 tags 
---
_Evaluated 783 sentences._  
_**Time taken**: 13:52 min (1.06s/it)_

**HMM Model Accuracy = 0.8588479175827627**

> Class-wise Accuracies 

|  Class (Tag)  |  Accuracy  |
|---------------|------------|
| #             |   0        |
| ''            |   0        |
| -LRB-         |   0.5625   |
| -RRB-         |   0.75     |
| :             |   0        |
| CC            |   0.877315 |
| CD            |   0.854054 |
| DT            |   0.938688 |
| EX            |   0.695652 |
| FW            |   0        |
| IN            |   0.93628  |
| JJ            |   0.795255 |
| JJR           |   0.649351 |
| JJS           |   0.741935 |
| LS            |   0        |
| MD            |   0.940476 |
| NN            |   0.881295 |
| NNP           |   0.863536 |
| NNPS          |   0.403226 |
| NNS           |   0.837108 |
| PDT           |   0.333333 |
| PRP           |   0.907738 |
| PRP$          |   0.893617 |
| RB            |   0.807128 |
| RBR           |   0.5      |
| RBS           |   0.3      |
| RP            |   0.56     |
| TO            |   0.929412 |
| VB            |   0.862986 |
| VBD           |   0.820919 |
| VBG           |   0.65371  |
| VBN           |   0.735499 |
| VBP           |   0.765873 |
| VBZ           |   0.866667 |
| WDT           |   0.845361 |
| WP            |   0.717391 |
| WP$           |   1        |
| WRB           |   0.611111 |
  
After this number of tags is reduced to 4 as per assignment.  

---

#### HMM for 4 tags
---
_Evaluated 783 sentences._  
_**Time taken**: 00:02 min (317.48it/s)_

**HMM Model Accuracy = 0.8873044789245556**

> Class-wise Accuracies 

|  Class (Tag)  |  Accuracy  |
|---------------|------------|
| A             |   0.788972 |
| N             |   0.879292 |
| O             |   0.952972 |
| V             |   0.824131 |

---

#### 36-tag vs 4-tag Model
---
We can observe that the model that simply considers 4 tags performs more accurately. 
Since the system must be able to distinguish between smaller differences, the accuracy 
of the tagging system decreases as the tag set is larger. On the other hand, accuracy 
increases with tag set size. We can also observe that as tags are added, the number of 
training samples decreases, providing a larger corpus for the 4-tag model to train on. 
It will therefore undoubtedly produce greater results.

The count functions C(w, u, v) (transition from w to u to v), 
                    C(u, v) (transition from u to v), 
                    C(word | v) (word marked with tag v), 
and C(v) (tag v) will have larger values when computing the transition and emission 
probability mathematically. As a result, the sample space for calculating probabilities grows.
This would lead to a higher calculation of these probability for the associated tags because 
the sample space is greater. As a result, a larger corpus is organically generated for this 
model's training, which naturally leads to higher results.

______________________
Thanking You!
